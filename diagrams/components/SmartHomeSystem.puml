@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

AddElementTag("microService", $shape=EightSidedShape(), $bgColor="CornflowerBlue", $fontColor="white", $legendText="micro service\neight sided")
AddBoundaryTag("bgBlue",$bgColor="#3091ff")

Person_Ext(user, "Пользователь")
Component(apiGateway,"APIGateway")
Component(webApplication,"WebApplication")

' Внешние устройства для управления

Container_Boundary(extDevices, "Датчики и испольнительные механизмы"){
    Component(sesorTemp, "Датчик температу")
    Component(relayLightSwitch, "Реле Освещения")
    Component(driverGate, "Привод ворот")
    Component(controllerHeating, "Контроллер отопления")
}


'KAFKA Брокер сообщений
Container_Boundary(brokerKafkaBoudary, "Брокер сообщений"){
    Component(brokerKafka,"Kafka","Брокер для обработки сообщений")
}

BiRel_U(sesorTemp,brokerKafka,"Обмен данными")
BiRel_U(relayLightSwitch,brokerKafka,"Обмен данными")
BiRel_U(driverGate,brokerKafka,"Обмен данными")
BiRel_U(controllerHeating,brokerKafka,"Обмен данными")


'сервис Датчики
Container_Boundary(msSensorsBoundary, "МС Датчики",$tags="bgBlue"){
    Component(sensorsApi,"SensorsControllerApi","RESTApi/JSON")
    ComponentDb(sensorDb, "DataBase", "Postgres")
    Component(sensorService, "Сервис управления устройствами", ".net")
    Component(sensorKafkaHandler, "Обработчик Ассинх сообщений", ".net")
}

BiRel(sensorsApi,sensorService,"API")
BiRel(sensorService,sensorDb,"Sql Команды")
BiRel(sensorKafkaHandler,sensorDb,"Sql команды")
BiRel(sensorKafkaHandler,sensorService,"API")
BiRel(brokerKafka,sensorKafkaHandler,"Обмен данными")



' сервиc Испольнительные механизмы
Container_Boundary(msDriverDevicesBoundary, "МС Испольнительные механизмы",$tags="bgBlue"){
    Component(driverDeviceApi,"DriversDevicesContolControllerApi","RESTApi/JSON")
    ComponentDb(driverDeviceDB,"DataBase","Postgres")
    Component(driverDeviceService,"Сервис упрвления Испол-ми механизмами",".net")
    Component(driverDeviceKafkaHandler,"Обрботчик Ассинх. сообщений",".net")
}

BiRel(driverDeviceApi,driverDeviceService,"API")
BiRel(driverDeviceService, driverDeviceDB, "SQL")
BiRel(driverDeviceKafkaHandler,driverDeviceDB,"SQL")
BiRel(driverDeviceKafkaHandler,driverDeviceService,"API")
BiRel(driverDeviceKafkaHandler,brokerKafka,"Обмен Данными")



' сервис управления пользователями
Container_Boundary(msUserDataBoundary, "МС Данные пользователя",$tags="bgBlue"){
    Component(userDataApi,"UserDataControllerApi","RESTApi/JSON")
    ComponentDb(userDataDd,"DataBase","Postgres")
    Component(userDataService,"Сервис управления пользователями",".net")
    Component(userDataKafkaHandler,"Обработчик Ассинх. сообщений",".net")
}

BiRel(brokerKafka,userDataKafkaHandler,"Обмен данными")
BiRel(userDataApi,userDataService,"API")
BiRel(userDataService,userDataDd,"SQL")
BiRel(userDataKafkaHandler, userDataDd,"SQL")
BiRel(userDataKafkaHandler, userDataService,"API")



'сервис уведомлений
Container_Boundary(msNotificationsBoundary, "МС Уведомлений",$tags="bgBlue"){
    Component(notificationsApi,"NotificationControllerApi","RESTApi/JSON")
    Component(notificationsDB,"DataBase","Postgres")
    Component(notificationsService,"Сервис управления уведомлениями",".net")
    Component(notificationsKafkaHandler,"Обработчи Ассинх. событий",".net")
}

BiRel(brokerKafka,notificationsKafkaHandler,"Обмен данными")
BiRel(notificationsApi,notificationsService,"API")
BiRel(notificationsService, notificationsDB,"SQL")
BiRel(notificationsKafkaHandler, notificationsDB,"SQL")
BiRel(notificationsKafkaHandler, notificationsService,"API")



' сервис телеметрии
Container_Boundary(msTelemetryBoundary, "МС Телеметрии",$tags="bgBlue"){
    Component(telemetryApi,"TelemetryControllerApi","RESTApi/JSON")
    ComponentDb(telemetryDB,"DataBase","Postgres")
    Component(telemetryService,"Сервис управления телеметрией",".net")
    Component(telemetryKafkaHandler,"Обработчик Ассинх. сообщений",".net")
}

BiRel(brokerKafka,telemetryKafkaHandler,"Обмен данными")
BiRel(telemetryApi,telemetryService,"API")
BiRel(telemetryService,telemetryDB,"SQL")
BiRel(telemetryKafkaHandler,telemetryDB,"SQL")
BiRel(telemetryKafkaHandler,telemetryService,"API")




Rel_L(user, apiGateway, "HttpRequest")
Rel(apiGateway, webApplication, "HttpRequest")


Rel_D(webApplication, sensorsApi, "HttpRequest")
Rel(webApplication, driverDeviceApi, "HttpRequest")
Rel(webApplication, userDataApi, "HttpRequest")
Rel(webApplication, telemetryApi, "HttpRequest")

@enduml